services:
  # Database services
  db:
    image: postgres:15-alpine
    container_name: infinivista_db
    restart: always
    env_file:
      - .env
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - local_pgdata:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - infinivista_backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: infinivista_pgadmin
    restart: always
    ports:
      - "8888:80"
    env_file:
      - .env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - infinivista_backend

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: infinivista_rabbitmq
    ports:
      - "15675:15672" # Management UI
      - "5675:5672" # For local services
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - infinivista_backend

networks:
  infinivista_backend:
    driver: bridge

volumes:
  # Database volumes
  pgadmin_data:
  local_pgdata:
  rabbitmq_data:
